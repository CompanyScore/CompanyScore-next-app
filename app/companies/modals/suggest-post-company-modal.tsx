"use client";

import { Button, Input, Modal, Textarea, Title, Toast, useToast } from "@/ui";
import { useSuggestCompanyStore } from "@/store";
import { useSuggestPostForm } from "@/hook";

export function SuggestPostCompanyModal() {
  const { postSuggestCompany } = useSuggestCompanyStore();

  const showToast = useToast((state) => state.showToast);

  const {
    handleSubmit,
    setValue,
    watch,
    formState: { errors },
    reset,
  } = useSuggestPostForm();

  const closeModal = () => {
    const modal = document.getElementById(
      "suggest_post_company_modal",
    ) as HTMLInputElement;
    if (modal) {
      modal.checked = false; // –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª–∫—É –≤ daisyUI
    }
  };

  const resetForm = () => {
    reset();
    closeModal();
  };

  const onSubmit = async (data: any) => {
    try {
      await postSuggestCompany({
        name: data.name,
        description: data.description,
      });
      showToast("–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!", "success");
      resetForm();
    } catch {
      const error = useSuggestCompanyStore.getState().error;
      showToast(error || "–û—à–∏–±–∫–∞", "error");
      resetForm();
    }
  };

  return (
    <Modal id="suggest_post_company_modal">
      <Title size="3" position="center">
        –ü—Ä–µ–¥–ª–æ–∂–∏—Ç–µ –∫–æ–º–ø–∞–Ω–∏—é
      </Title>

      <form onSubmit={handleSubmit(onSubmit)}>
        <div className="mb-4">
          <label htmlFor="position" className="block mb-2">
            –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏
          </label>
          <Input
            value={watch("name")}
            onChange={(value) => setValue("name", value)}
          />
          <p className="text-error">{errors.name?.message}</p>
        </div>

        <div className="mb-4">
          <label htmlFor="comment" className="block mb-2">
            –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏
          </label>
          <Textarea
            value={watch("description") || ""}
            onChange={(value) => setValue("description", value)}
            placeholder={`–†–∞–±–æ—Ç–∞–ª –Ω–∞–¥ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º –ø—Ä–æ–µ–∫—Ç–æ–º –æ–∫–æ–ª–æ –¥–≤—É—Ö –ª–µ—Ç. –ö–æ–º–∞–Ω–¥–∞ –±—ã–ª–∞ —Ö–æ—Ä–æ—à–∞—è ‚Äì 20 —á–µ–ª–æ–≤–µ–∫, –∞ –µ—â—ë –¥–≤–∞ —á–µ—Ç–≤–µ—Ä–æ–Ω–æ–≥–∏—Ö –æ—Ö—Ä–∞–Ω–Ω–∏–∫–∞ –∏ –æ–¥–Ω–∞ –ø—É—à–∏—Å—Ç–∞—è –∫–æ–Ω—Ç—Ä–æ–ª—ë—Ä –∫–∞—á–µ—Å—Ç–≤–∞.
  
–ü–ª—é—Å—ã: –û—Ç–ª–∏—á–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞ ‚Äì –∫–æ—à–µ–ª—ë–∫ –±—ã–ª —Å—á–∞—Å—Ç–ª–∏–≤! –ê—Ç–º–æ—Å—Ñ–µ—Ä–∞ –≤–µ—Å—ë–ª–∞—è, –∫–æ–ª–ª–µ–≥–∏ —Å –æ–≥–æ–Ω—å–∫–æ–º, –∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤—ã —Ç–∞–∫–∏–µ, —á—Ç–æ –ø–æ—Ç–æ–º –µ—â—ë –¥–æ–ª–≥–æ –≤—Å–ø–æ–º–∏–Ω–∞–ª–∏. üòÑ
  
–ú–∏–Ω—É—Å—ã: –û—Ñ–∏—Å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ‚Äì —ç—Ç–æ, –∫–æ–Ω–µ—á–Ω–æ, –∂–∏–≤–æ–µ –æ–±—â–µ–Ω–∏–µ, –Ω–æ –≤–æ—Ç –¥–æ—Ä–æ–≥–∞ —Ç—É–¥–∞-–æ–±—Ä–∞—Ç–Ω–æ –Ω–∞ 2 —á–∞—Å–∞ –ø—Ä–µ–≤—Ä–∞—â–∞–ª–∞—Å—å –≤ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ –Ω–∞ —Ç–µ—Ä–ø–µ–Ω–∏–µ –∏ —Å—Ç–æ–π–∫–æ—Å—Ç—å.`}
            rows={13}
          />
          <p className="text-error">{errors.description?.message}</p>
        </div>

        <Button className="btn-primary w-full">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</Button>
      </form>

      <Toast />
    </Modal>
  );
}
